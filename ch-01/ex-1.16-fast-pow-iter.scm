;;; Process generated by the fast-pow procedure in evaluating (pow 2 20)

;;; (iter 1 2 20)

;;; (iter 1 2^2 20/2)
;;; (iter 1 4^2 10/2)
;;; (iter 1*16 16 5-1)
;;; (iter 16 16^2 4/2)
;;; (iter 16 256^2 2/2)
;;; (iter 16*65536 65536 1-1)

;=> 1048576

(define (fast-pow b n)
  (define (iter a b n)
    (cond ((= n 0) a)
          ((even? n) (iter a (square b) (/ n 2)))
          (else (iter (* a b) b (- n 1)))))
  (iter 1 b n))

(define (even? n)
  (= (remainder n 2) 0))

(define (remainder x y)
  (define res (/ x y))
  (- res (floor res)))

(define (square x)
  (* x x))
