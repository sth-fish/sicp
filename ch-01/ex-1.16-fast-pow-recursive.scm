;;; Process generated by the fast-pow procedure in evaluating (pow 2 20)

;;; (fast-pow 2 20)

;;; (sq (fast-pow 2 10))
;;; (sq (sq (fast-pow 2 5)))
;;; (sq (sq (* 2 (fast-pow 2 4))))
;;; (sq (sq (* 2 (sq (fast-pow 2 2)))))
;;; (sq (sq (* 2 (sq (sq (fast-pow 2 1))))))
;;; (sq (sq (* 2 (sq (sq (* 2 (fast-pow 2 0)))))))
;;; (sq (sq (* 2 (sq (sq (* 2 1))))))
;;; (sq (sq (* 2 (sq (sq 2)))))
;;; (sq (sq (* 2 (sq 4))))
;;; (sq (sq (* 2 16))
;;; (sq (sq 32))
;;; (sq 1024)

;;; 1048576

(define (fast-pow b n)
  (cond ((= n 0) 1)
        ((even? n) (square (fast-pow b (/ n 2))))
        (else (* b (fast-pow b (- n 1))))
  ))

(define (even? n)
  (= (remainder n 2) 0))

(define (remainder x y)
  (define res (/ x y))
  (- res (floor res)))

(define (square x)
  (* x x))
